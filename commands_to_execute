# Setup a new Ubuntu Droplet on DO and run this commands.
# Ubuntu 18.04
# The following commands were taken from multiple sources.
# 1. Secure the server: https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-18-04
# replace usuario with your desired username

adduser usuario
usermod -aG sudo usuario
# test if you can sudo with your user
# then upload your ssh keys. in your local machine do
ssh-copy-id -i ~/.ssh/mykey usuario@host

# setup zsh instead of bash
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
# then edit ~/.zshrc and set ZSH_THEME="agnoster"

# 2. Setup Nginx, MariaDB and PHP: https://websiteforstudents.com/install-wordpress-on-ubuntu-18-04-lts-bata-with-nginx-mariadb-and-php-fpm/
sudo apt update && sudo apt dist-upgrade && sudo apt autoremove
sudo apt install nginx
sudo apt install mariadb-server mariadb-client

# Check that Nginx is allowed on UFW
sudo ufw app list

# Secure the database
sudo mysql_secure_installation

# Install PHP
sudo apt install php-fpm php-common php-mbstring php-xmlrpc php-soap php-gd php-xml php-intl php-mysql php-cli php-ldap php-zip php-curl

# Config PHP
sudo vim /etc/php/7.2/fpm/php.ini

## Inside that file change this settings
post_max_size = 100M
memory_limit = 256M
max_execution_time = 360
upload_max_filesize = 100M
date.timezone = America/Santiago
# exit vim with <ESC> :wq

# Create Wordpress Database (you can log into mariadb with mysql cmd)
sudo mysql -u root -p 
# Inside MariaDB.
# you should replace the following variables
# dbname
# dbuser
# dbpass
CREATE DATABASE dbname
CREATE USER 'dbuser'@'localhost' IDENTIFIED BY 'dbpass';
GRANT ALL ON WP_database.* TO 'dbuser'@'localhost' IDENTIFIED BY 'dbpass' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EXIT;

# Install Wordpress
# replace variables
# project_folder -> example.com
cd /tmp && wget https://wordpress.org/latest.tar.gz
tar -zxvf latest.tar.gz
sudo mv wordpress /var/www/project_folder
sudo chown -R www-data:www-data /var/www/project_folder
sudo chmod -R 755 /var/www/project_folder
sudo cp /var/www/project_folder/wp-config-sample.php /var/www/project_folder/wp-config.php 
sudo vim /var/www/project_folder/wp-config.php

# Config Nginx. Paste the contents from the file 'nginx_config_site' in the following file
sudo vim /etc/nginx/sites-available/project_folder 
# enable the site
sudo ln -s /etc/nginx/sites-available/project_folder /etc/nginx/sites-enabled/

# restart the services
sudo systemctl restart nginx.service
sudo systemctl restart php7.2-fpm.service

# Install CertBot
sudo add-apt-repository ppa:certbot/certbot
sudo apt install python-certbot-nginx

# inside /etc/nginx/sites-available/example.com
...
server_name example.com www.example.com;
...;

# then restart nginx
sudo systemctl reload nginx

# Allow UFW
sudo ufw allow 'Nginx Full'
sudo ufw delete allow 'Nginx HTTP'
sudo ufw status

# generate the certificate
sudo certbot --nginx -d example.com -d www.example.com
# if it shows an error like DNS problem: NXDOMAIN looking up A for www.example.com it means that you have to place a CNAME in the DNS pointing www to @

